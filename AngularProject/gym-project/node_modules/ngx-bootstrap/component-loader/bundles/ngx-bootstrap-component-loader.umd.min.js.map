{"version":3,"sources":["ng://ngx-bootstrap/component-loader/bs-component-ref.class.ts","ng://ngx-bootstrap/component-loader/content-ref.class.ts","ng://ngx-bootstrap/component-loader/component-loader.class.ts","ng://ngx-bootstrap/component-loader/component-loader.factory.ts"],"names":["BsComponentRef","ContentRef","nodes","viewRef","componentRef","this","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","EventEmitter","Function","prototype","Object","defineProperty","_isHiding","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","_providers","push","show","_subscribePositioning","_innerComponent","onBeforeShow","emit","_contentRef","_getContentRef","content","context","initialState","injector","Injector","create","providers","parent","attachView","hostView","instance","assign","ElementRef","nativeElement","appendChild","location","document","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","onShown","_registerOutsideClick","hide","onBeforeHide","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","onHidden","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","triggers","_listenOpts","outsideClick","target","registerHide","listenToTriggersV2","_globalListener","attachInline","vRef","template","_inlineViewRef","createEmbeddedView","target_1","setTimeout","registerOutsideClick","targets","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","createText","contentCmptFactory","modalContentInjector","ComponentLoaderFactory","createLoader","Injectable","ComponentFactoryResolver","NgZone","PositioningService","ApplicationRef"],"mappings":"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","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class BsComponentRef<T> {\n  templateRef: TemplateRef<T>;\n  viewContainer: ViewContainerRef;\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  /* tslint:disable-next-line: no-any */\n  nodes: any[];\n  viewRef?: ViewRef;\n  /* tslint:disable-next-line: no-any */\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    /* tslint:disable-next-line: no-any */\n    nodes: any[],\n    viewRef?: ViewRef,\n    /* tslint:disable-next-line: no-any */\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Renderer2,\n  StaticProvider,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from 'ngx-bootstrap/positioning';\nimport { listenToTriggersV2, registerOutsideClick } from 'ngx-bootstrap/utils';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\nimport { Subscription } from 'rxjs';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<void> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onShown: EventEmitter<any> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<boolean> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: StaticProvider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: Subscription;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  /* tslint:disable-next-line: no-any*/\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: StaticProvider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    /* tslint:disable-next-line: no-any*/\n    content?: string | TemplateRef<any>;\n    /* tslint:disable-next-line: no-any*/\n    context?: any;\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any;\n    /* tslint:disable-next-line: no-any*/\n    [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n\n      const injector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    /* tslint:disable-next-line: no-any*/\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content: string | TemplateRef<any> | any,\n    /* tslint:disable-next-line: no-any*/\n    context?: any,\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n\n      const modalContentInjector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\n}\n"]}